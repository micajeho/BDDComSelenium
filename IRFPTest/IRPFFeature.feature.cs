// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.6.1.0
//      SpecFlow Generator Version:1.6.0.0
//      Runtime Version:4.0.30319.17626
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace IRFPTest
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.6.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CalculoDoValorDoIRFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "IRPFFeature.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Cálculo do valor do IR", "Para saber quanto vou pagar de imposto\r\nEnquanto contribuinte\r\nEu gostaria de cal" +
                    "cular o IR", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Salário de 100 reais fica isento")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Cálculo do valor do IR")]
        public virtual void SalarioDe100ReaisFicaIsento()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Salário de 100 reais fica isento", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("que estou na página IR");
#line 8
 testRunner.And("preencho o campo \'salario\' com o valor 100.00");
#line 9
 testRunner.When("clico em Calcular");
#line 10
 testRunner.Then("vejo \'O resultado é 0.00\'");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Salário de 5000 paga 300")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Cálculo do valor do IR")]
        public virtual void SalarioDe5000Paga300()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Salário de 5000 paga 300", ((string[])(null)));
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given("que estou na página IR");
#line 14
 testRunner.And("preencho o campo \'salario\' com o valor 5000.00");
#line 15
 testRunner.When("clico em Calcular");
#line 16
 testRunner.Then("vejo \'O resultado é 300.00\'");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Salário de 5000 com 1 dependente paga 200")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Cálculo do valor do IR")]
        public virtual void SalarioDe5000Com1DependentePaga200()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Salário de 5000 com 1 dependente paga 200", ((string[])(null)));
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.Given("que estou na página IR");
#line 21
 testRunner.And("preencho o campo \'salario\' com o valor 5000.00");
#line 22
 testRunner.And("preencho o campo \'dependentes\' com o valor 1");
#line 23
 testRunner.When("clico em Calcular");
#line 24
 testRunner.Then("vejo \'O resultado é 200.00\'");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Salário de 5000 com 2 dependente paga 200")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Cálculo do valor do IR")]
        public virtual void SalarioDe5000Com2DependentePaga200()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Salário de 5000 com 2 dependente paga 200", ((string[])(null)));
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.Given("que estou na página IR");
#line 28
 testRunner.And("preencho o campo \'salario\' com o valor 5000.00");
#line 29
 testRunner.And("preencho o campo \'dependentes\'com o valor 2");
#line 30
 testRunner.When("clico em Calcular");
#line 31
 testRunner.Then("vejo \'O resultado é 100.00\'");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Salário de 6000  paga 200")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Cálculo do valor do IR")]
        public virtual void SalarioDe6000Paga200()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Salário de 6000  paga 200", ((string[])(null)));
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
 testRunner.Given("que estou na página IR");
#line 35
 testRunner.And("preencho o campo \'salario\' com o valor 6000.00");
#line 36
 testRunner.And("preencho o campo \'dependentes\' com o valor 2");
#line 37
 testRunner.When("clico em Calcular");
#line 38
 testRunner.Then("vejo \'O resultado é 150.00\'");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Salário de 6000 para 150")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Cálculo do valor do IR")]
        public virtual void SalarioDe6000Para150()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Salário de 6000 para 150", ((string[])(null)));
#line 41
this.ScenarioSetup(scenarioInfo);
#line 42
 testRunner.Given("que estou na página IR");
#line 43
 testRunner.And("preencho o campo \'salario\' com o valor 6000.00");
#line 44
 testRunner.And("preencho o campo \'dependentes\' com o valor 2");
#line 45
 testRunner.When("clico em Calcular");
#line 46
 testRunner.Then("vejo \'O resultado é 150.00\'");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
